# This is a basic workflow to help you get started with Actions

name: clang-format

# Controls when the workflow will run
on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - '**/*.cpp'   # 只针对 .cpp 文件
      - '**/*.h'     # 只针对 .h 文件
      - '**/*.c'   # 只针对 .c 文件
      - '**/*.hpp'   # 只针对 .hpp 文件

  # reusable
  workflow_call:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: check-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
    - name: Update and install clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format

    - name: Checkout Repo
      uses: actions/checkout@v4
      
    - name: Get changed files in the PR
      id: files
      run: |
        # Get a list of changed files in the PR
        files=$(git diff --name-only HEAD^ ${{ github.sha }}  -- '*.cpp' '*.h' '*.c' '*.hpp')

        echo "Modified files:"
        echo "$files"

        # Save changed files to a variable for later steps
        echo "::set-output name=changed-files::$files"

    - name: Run clang-format check
      run: |
        for file in ${{ steps.files.outputs.changed-files }}
          if [ -n "$file" ]; then
            if [ -f ".clang-format" ]; then
                clang-format -n $file --Werror
            else
                clang-format --style=WebKit -n $file --Werror
            fi
          fi
        done
        echo "All changed files passed clang-format check"
